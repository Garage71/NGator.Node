{"version":3,"sources":["app.ts"],"names":[],"mappings":"AAAA;;EAEE;;AAEF,8CAA8C;AAC9C,MAAY,OAAO,WAAK,SAAS,CAAC,CAAA;AAClC,MAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAC7B,MAAY,MAAM,WAAM,QAAQ,CAAC,CAAA;AACjC,MAAY,YAAY,WAAM,eAAe,CAAC,CAAA;AAC9C,MAAY,UAAU,WAAM,aAAa,CAAC,CAAA;AAC1C,MAAY,MAAM,WAAM,gBAAgB,CAAC,CAAA;AASzC,0CAA0C;AAE1C,IAAI,GAAG,GAAG,OAAO,EAAE,CAAC;AAEpB,oBAAoB;AACpB,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC,CAAC;AACtD,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;AAE9B,kDAAkD;AAClD,kEAAkE;AAClE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACvB,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACpD,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;AACvB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC;AAE/D,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;AAC7B,2BAA2B;AAE3B,yCAAyC;AACzC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI;IACnB,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;IACjC,IAAI,aAAa,GAAmB;QAChC,IAAI,EAAE,GAAG,CAAC,IAAI;QACd,MAAM,EAAE,GAAG;QACX,OAAO,EAAE,GAAG,CAAC,OAAO;QACpB,KAAK,EAAE,GAAG,CAAC,KAAK;KACnB,CAAC;IACF,IAAI,CAAC,aAAa,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC;AAGH,iBAAiB;AAEjB,4BAA4B;AAC5B,wBAAwB;AACxB,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,aAAa,CAAC,CAAC,CAAC;IACnC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAmB,EAAE,GAAoB,EAAE,GAAqB,EAAE,IAAS;QAChF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC;QAC9B,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;YAChB,OAAO,EAAE,GAAG,CAAC,OAAO;YACpB,KAAK,EAAE,GAAG;SACb,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAED,2BAA2B;AAC3B,gCAAgC;AAChC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAmB,EAAE,GAAoB,EAAE,GAAqB,EAAE,IAAS;IAChF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC;IAC9B,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;QAChB,OAAO,EAAE,GAAG,CAAC,OAAO;QACpB,KAAK,EAAE,EAAE;KACZ,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAGH;kBAAe,GAAG,CAAC","file":"app.js","sourcesContent":["/**\r\n* app: main application module\r\n*/\r\n\r\n/// <reference path=\"../typings/index.d.ts\" />\r\nimport * as express from'express';\r\nimport * as path from 'path';\r\nimport * as logger from 'morgan';\r\nimport * as cookieParser from 'cookie-parser';\r\nimport * as bodyParser from 'body-parser';\r\nimport * as routes from './routes/index';\r\n\r\ninterface IPipelineError extends Error {\r\n    name: string;\r\n    message: string;\r\n    stack: string;\r\n    status: number;\r\n}\r\n\r\n//import * as users from './routes/users';\r\n\r\nlet app = express();\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, '../../views'));\r\napp.set('view engine', 'hbs');\r\n\r\n// uncomment after placing your favicon in /public\r\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\n app.use(express.static(path.join(__dirname, '../../public')));\r\n\r\napp.use('/', routes.default);\r\n//app.use('/users', users);\r\n\r\n// catch 404 and forward to error handler\r\napp.use((req, res, next) => {\r\n    let err = new Error('Not Found');\r\n    let pipelineError: IPipelineError = {\r\n        name: err.name,\r\n        status: 404,\r\n        message: err.message,\r\n        stack: err.stack\r\n    };\r\n    next(pipelineError);\r\n});\r\n\r\n\r\n// error handlers\r\n\r\n// development error handler\r\n// will print stacktrace\r\nif (app.get('env') === 'development') {\r\n    app.use((err: IPipelineError, req: express.Request, res: express.Response, next: any) => {\r\n        res.status(err.status || 500);\r\n        res.render('error', {\r\n            message: err.message,\r\n            error: err\r\n        });\r\n    });\r\n}\r\n\r\n// production error handler\r\n// no stacktraces leaked to user\r\napp.use((err: IPipelineError, req: express.Request, res: express.Response, next: any) => {\r\n    res.status(err.status || 500);\r\n    res.render('error', {\r\n        message: err.message,\r\n        error: {}\r\n    });\r\n});\r\n\r\n\r\nexport default app;\r\n"],"sourceRoot":"/source/"}