{"version":3,"sources":["services/rssparser.ts"],"names":[],"mappings":"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","file":"services/rssparser.js","sourcesContent":["/**\r\n *\r\n * RSS Feed parser. Based upon feed-read package\r\n */\r\n\r\nimport * as sax from 'sax';\r\nimport * as _ from 'underscore';\r\nimport * as si from '../shared/interfaces';\r\nimport * as UUID from 'node-uuid';\r\nimport {BinaryProvider} from './binaryprovider';\r\nimport {ContentStorage} from './contentstorage';\r\n\r\nexport class RssParser {\r\n    private parser = new sax.SAXParser(true, {\r\n        trim: true,\r\n        normalize: true\r\n    });\r\n    private currentTag: any;\r\n    private article: any = {};\r\n    private articles: any[] = [];\r\n    private defaultAuthor: any;\r\n    private meta: any;\r\n    private error: any;\r\n    private cs = ContentStorage;\r\n    constructor(private callback: any) {\r\n        this.parser.onopentag = (tag) => {\r\n             this.open(tag);\r\n        };\r\n        this.parser.onclosetag = (tag) => {\r\n             this.close(tag);\r\n        };\r\n\r\n        this.parser.onerror = () => {\r\n            this.error = undefined;\r\n        };\r\n        this.parser.ontext = (text) => {\r\n             this.ontext(text);\r\n        };\r\n        this.parser.oncdata = (text) => {\r\n             this.ontext(text);\r\n        };\r\n        this.parser.onend = () => {\r\n             this.onend();\r\n        };\r\n    }\r\n\r\n    parse(xml: string, source: si.IRSSSource): void {\r\n        let rssType = this.identify(xml);\r\n        switch (rssType) {\r\n            case 'rss':\r\n                this.rss(xml, source);\r\n                break;\r\n            case 'atom':\r\n                this.atom(xml, source);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private identify(xml: string) : string {\r\n        if (/<(rss|rdf)\\b/i.test(xml)) {\r\n            return 'rss';\r\n        } else if (/<feed\\b/i.test(xml)) {\r\n            return 'atom';\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    write(xml: string): void {\r\n        this.parser.write(xml).close();\r\n    };\r\n\r\n    private open (tag: any): void {\r\n        tag.parent = this.currentTag;\r\n        tag.children = [];\r\n        if (tag.parent) {\r\n             tag.parent.children.push(tag);\r\n        }\r\n        this.currentTag = tag;\r\n        this.onopentag(tag);\r\n    }\r\n\r\n    private close (tagname: string): void {\r\n        this.onclosetag(tagname, this.currentTag);\r\n        if (this.currentTag && this.currentTag.parent) {\r\n            let p = this.currentTag.parent;\r\n            delete this.currentTag.parent;\r\n            this.currentTag = p;\r\n        }\r\n    }\r\n\r\n    private ontext (text: string): void {\r\n        if (this.currentTag) {\r\n            this.currentTag.children.push(text);\r\n        }\r\n    }\r\n\r\n    private onopentag(tag: any): void {\r\n        if (tag.name === 'entry') {\r\n             this.article = tag;\r\n        }\r\n    };\r\n\r\n    private onclosetag (tagname: string, currentTag: any): void {\r\n        if (tagname === 'entry') {\r\n            this.articles.push(this.article);\r\n            this.article = null;\r\n        } else if (tagname === 'author' && !this.article) {\r\n            this.defaultAuthor = this.childData(currentTag, 'name');\r\n        } else if (tagname === 'link' && currentTag.attributes.rel !== 'self') {\r\n            if (!this.meta.link) {\r\n                this.meta.link = currentTag.attributes.href;\r\n            }\r\n        } else if (tagname === 'title' && !currentTag.parent.parent) {\r\n            this.meta.name = currentTag.children[0];\r\n        }\r\n    };\r\n\r\n    private onend (): any {\r\n        this.callback(_.filter(_.map(this.articles,\r\n            (art) => {\r\n                if (!art.children.length) {\r\n                     return null;\r\n                }\r\n                let published = this.childData(art, 'published') || this.childData(art, 'updated');\r\n                let datePublished: Date;\r\n                if (published) {\r\n                    datePublished = new Date(published);\r\n                } else {\r\n                    datePublished = new Date(Date.now());\r\n                }\r\n                let header: si.INewsHeader = {\r\n                    publishDate: datePublished,\r\n                    uuid: UUID.v4(),\r\n                    title: this.childData(art, 'title'),\r\n                    description: this.scrubHtml(this.childData(art, 'description')),\r\n                    link: this.childByName(art, 'link').attributes.href,\r\n                    source: this.childData(art, 'source'),\r\n                    hasLogo: false,\r\n                    hasEnclosure: false,\r\n                    enclosure: ''\r\n                };\r\n\r\n                if (header.hasEnclosure) {\r\n                    BinaryProvider.GETBINARYDATA(art.enclosure, (buffer) => {\r\n                        this.cs.saveEnclosure(header.uuid, buffer);\r\n                    });\r\n                }\r\n                return header;\r\n            }\r\n        ), art => (!!art)));\r\n    }\r\n\r\n    atom(xml: string, source: si.IRSSSource): void {\r\n        this.articles = [];\r\n\r\n        this.meta = {\r\n             source: source\r\n        };\r\n\r\n        this.parser.write(xml);\r\n    }\r\n\r\n    rss(xml: string, source: si.IRSSSource): void {\r\n        this.articles = [];\r\n\r\n        this.meta = {\r\n            source: source\r\n        };\r\n\r\n        this.onopentag = (tag) => {\r\n            if (tag.name === 'item') {\r\n                this.article = tag;\r\n            }\r\n        };\r\n\r\n        this.onclosetag =  (tagname: string, currentTag: sax.Tag) => {\r\n            if (tagname === 'item') {\r\n                this.articles.push(this.article);\r\n                this.article = null;\r\n            } else if (tagname === 'channel') {\r\n                if (!this.meta.link) {\r\n                    this.meta.link = this.childData(currentTag, 'link');\r\n                }\r\n                this.meta.name = this.childData(currentTag, 'title');\r\n                if (!source.hasLogo) {\r\n                    let logoTag = this.childByName(currentTag, 'image');\r\n                    if (logoTag) {\r\n                        let logoUrl = this.childData(logoTag, 'url');\r\n\r\n                        if (logoUrl) {\r\n                            if (!logoUrl.includes('http')) {\r\n                                logoUrl = `http:${logoUrl}`;\r\n                            }\r\n                            source.hasLogo = true;\r\n                            BinaryProvider.GETBINARYDATA(logoUrl,\r\n                            (logo) => {\r\n                                this.cs.saveLogo(source.name, logo);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            } else if (tagname === 'enclosure') {\r\n                if (currentTag.attributes && currentTag.attributes['url']) {\r\n                    this.article.hasEnclosure = true;\r\n                    this.article.enclosure = currentTag.attributes['url'];\r\n                }\r\n            }\r\n        };\r\n\r\n        this.onend = (): any => {\r\n            this.callback(_.filter(_.map(this.articles,\r\n                (article) => {\r\n                    if (!article.children.length) {\r\n                        return null;\r\n                    }\r\n\r\n                    let published = this.childData(article, 'pubDate');\r\n                    let datePublished: Date;\r\n                    if (published) {\r\n                        datePublished = new Date(published);\r\n                    } else {\r\n                        datePublished = new Date(Date.now());\r\n                    }\r\n\r\n                    let header: si.INewsHeader = {\r\n                        publishDate: datePublished,\r\n                        title: this.childData(article, 'title'),\r\n                        description: this.scrubHtml(this.childData(article, 'content:encoded'))\r\n                        || this.scrubHtml(this.childData(article, 'description')),\r\n                        link: this.childData(article, 'link'),\r\n                        source: this.childData(article, 'source'),\r\n                        uuid: UUID.v4(),\r\n                        hasLogo: source.hasLogo,\r\n                        hasEnclosure: article.hasEnclosure,\r\n                        enclosure: article.enclosure\r\n                    };\r\n\r\n                    if (article.hasEnclosure) {\r\n                        BinaryProvider.GETBINARYDATA(article.enclosure, (buffer) => {\r\n                            this.cs.saveEnclosure(header.uuid, buffer);\r\n                        });\r\n                    }\r\n\r\n                    return header;\r\n                }\r\n            ), art => (!!art)));\r\n        };\r\n\r\n        this.write(xml);\r\n    }\r\n\r\n    private scrubHtml(html: string): string {\r\n        return html.replace(/<script.*<\\/script>/gi, '');\r\n    }\r\n\r\n    private  childByName(parent: any, name: string): any {\r\n        let children = parent.children || [];\r\n        for (let child of children) {\r\n            if (child.name === name) {\r\n                return child;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private childData(parent: any, name: string): string {\r\n        let node = this.childByName(parent, name);\r\n        if (!node) {\r\n            return '';\r\n        }\r\n        let children = node.children;\r\n        if (!children.length) {\r\n            return '';\r\n        }\r\n        return children.join('');\r\n    }\r\n}"],"sourceRoot":"/source/"}