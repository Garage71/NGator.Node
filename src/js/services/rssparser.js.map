{"version":3,"sources":["services/rssparser.ts"],"names":[],"mappings":"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","file":"services/rssparser.js","sourcesContent":["/**\r\n *\r\n * RSS Feed parser. Based upon feed-read package\r\n */\r\n\r\nimport * as sax from 'sax';\r\nimport * as _ from 'underscore';\r\nimport * as si from '../shared/interfaces';\r\nimport * as UUID from 'node-uuid';\r\n\r\nexport class RssParser {\r\n    private parser: sax.SAXParser = new sax.SAXParser(true, {\r\n        trim: true,\r\n        normalize: true\r\n    });\r\n    private current_tag: any;\r\n    private article: any = {};\r\n    private articles: any[] = [];\r\n    private default_author: any;\r\n    private meta: any;\r\n    private error: any;\r\n    constructor(private callback: any) {\r\n        this.parser.onopentag = (tag) => {\r\n             this.open(tag);\r\n        };\r\n        this.parser.onclosetag = (tag) => {\r\n             this.close(tag);\r\n        };\r\n\r\n        this.parser.onerror = () => {\r\n             this.error = undefined;\r\n        }\r\n        this.parser.ontext = (text) => {\r\n             this.ontext(text);\r\n        };\r\n        this.parser.oncdata = (text) => {\r\n             this.ontext(text);\r\n        };\r\n        this.parser.onend = () => {\r\n             this.onend();\r\n        };\r\n    }\r\n\r\n    parse(xml: string) {\r\n        let rssType = this.identify(xml);\r\n        switch (rssType) {\r\n            case 'rss':\r\n                this.rss(xml, null);\r\n                break;\r\n            case 'atom':\r\n                this.atom(xml, null);\r\n                break;        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private identify(xml: string) : string {\r\n        if (/<(rss|rdf)\\b/i.test(xml)) {\r\n            return 'rss';\r\n        } else if (/<feed\\b/i.test(xml)) {\r\n            return 'atom';\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    \r\n    write(xml: string){\r\n        this.parser.write(xml).close();\r\n    };\r\n    \r\n    private open (tag) {\r\n        tag.parent = this.current_tag;\r\n        tag.children = [];\r\n        if (tag.parent) {\r\n             tag.parent.children.push(tag);\r\n        }\r\n        this.current_tag = tag;\r\n        this.onopentag(tag);\r\n    }\r\n    \r\n    private close (tagname) {\r\n        this.onclosetag(tagname, this.current_tag);\r\n        if (this.current_tag && this.current_tag.parent) {\r\n            let p = this.current_tag.parent;\r\n            delete this.current_tag.parent;\r\n            this.current_tag = p;\r\n        }\r\n    }\r\n    \r\n    private ontext (text) {\r\n        if (this.current_tag) {\r\n            this.current_tag.children.push(text);\r\n        }\r\n    }\r\n\r\n    private onopentag(tag) {\r\n        if (tag.name === 'entry') {\r\n             this.article = tag;\r\n        }\r\n    };\r\n\r\n    private onclosetag (tagname, currentTag) {\r\n        if (tagname === 'entry') {\r\n            this.articles.push(this.article);\r\n            this.article = null;\r\n        } else if (tagname === 'author' && !this.article) {\r\n            this.default_author = this.childData(currentTag, 'name');\r\n        } else if (tagname === 'link' && currentTag.attributes.rel !== 'self') {\r\n            this.meta.link || (this.meta.link = currentTag.attributes.href);\r\n        } else if (tagname === 'title' && !currentTag.parent.parent) {\r\n            this.meta.name = currentTag.children[0];\r\n        }\r\n    };\r\n\r\n    private onend () {\r\n        this.callback(_.filter(_.map(this.articles,\r\n            (art) => {\r\n                if (!art.children.length) {\r\n                     return null;\r\n                }                \r\n                let published = this.childData(art, 'published') || this.childData(art, 'updated');\r\n                let datePublished: Date;\r\n                if (published) {\r\n                    datePublished = new Date(published);\r\n                } else {\r\n                    datePublished = new Date(Date.now());\r\n                }\r\n                let obj: si.INewsHeader = {\r\n                    publishDate: datePublished,\r\n                    uuid: UUID.v4(),\r\n                    title: this.childData(art, 'title'),\r\n                    description: this.scrubHtml(this.childData(art, 'description')),                                        \r\n                    link: this.childByName(art, 'link').attributes.href,\r\n                    source: this.childData(art, 'source'),\r\n                    enclosure: null,\r\n                    hasLogo: false,\r\n                    hasEnclosure: false\r\n                };\r\n                return obj;\r\n            }\r\n        ), art => (!!art)));\r\n    }\r\n\r\n    atom(xml, source) {\r\n        this.articles = [];\r\n\r\n        this.meta = {\r\n             source: source\r\n        };\r\n\r\n        this.parser.write(xml);\r\n    }\r\n\r\n    rss(xml, source) {\r\n        this.articles = [];\r\n\r\n        this.meta = {\r\n            source: source\r\n        };\r\n\r\n        this.onopentag = (tag) => {\r\n            if (tag.name === 'item') {\r\n                this.article = tag;\r\n            }\r\n        };\r\n\r\n        this.onclosetag =  (tagname, current_tag) => {\r\n            if (tagname === 'item') {\r\n                this.articles.push(this.article);\r\n                this.article = null;\r\n            } else if (tagname === 'channel') {\r\n                this.meta.link || (this.meta.link = this.childData(current_tag, 'link'));\r\n                this.meta.name = this.childData(current_tag, 'title');\r\n            }\r\n        };\r\n\r\n        this.onend = () => {\r\n            this.callback(_.filter(_.map(this.articles,\r\n                (article) => {\r\n                    if (!article.children.length) {\r\n                        return null;\r\n                    }\r\n\r\n                    let published = this.childData(article, 'pubDate');\r\n                    let datePublished: Date;\r\n                    if (published) {\r\n                        datePublished = new Date(published);\r\n                    } else {\r\n                        datePublished = new Date(Date.now());\r\n                    }\r\n\r\n                    var obj: si.INewsHeader = {                        \r\n                        publishDate: datePublished,\r\n                        title: this.childData(article, 'title'),\r\n                        description: this.scrubHtml(this.childData(article, 'content:encoded')) || this.scrubHtml(this.childData(article, 'description')),                                                \r\n                        link: this.childData(article, 'link'),\r\n                        source: this.childData(article, 'source'),\r\n                        uuid: UUID.v4(),\r\n                        enclosure: null,\r\n                        hasLogo: true,\r\n                        hasEnclosure: false                        \r\n                    };                    \r\n                    return obj;\r\n                }\r\n            ), art => (!!art)));\r\n        };\r\n\r\n        this.write(xml);\r\n    }\r\n    \r\n    private scrubHtml(html: string): string {\r\n        return html.replace(/<script.*<\\/script>/gi, '');\r\n    }\r\n    \r\n    private  childByName(parent, name) {\r\n        let children = parent.children || [];\r\n        for (let i = 0; i < children.length; i++) {\r\n            if (children[i].name === name) {\r\n                return children[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    private childData(parent, name): string {\r\n        let node = this.childByName(parent, name);\r\n        if (!node) {\r\n            return '';\r\n        }\r\n        let children = node.children;\r\n        if (!children.length) {\r\n            return '';\r\n        }\r\n        return children.join('');\r\n    }\r\n}"],"sourceRoot":"/source/"}