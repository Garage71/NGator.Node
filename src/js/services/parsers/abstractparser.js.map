{"version":3,"sources":["services/parsers/abstractparser.ts"],"names":[],"mappings":"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","file":"services/parsers/abstractparser.js","sourcesContent":["/**\r\n *\r\n * Base news parser class. Built on SAX\r\n *\r\n */\r\n\r\n\r\nimport * as si from '../../shared/interfaces';\r\nimport * as request from 'request';\r\nimport {IncomingMessage} from 'http';\r\nimport * as iconv from 'iconv';\r\nimport * as sax from 'sax';\r\nimport {ContentStorage} from '../contentstorage';\r\nexport abstract class AbstractParser {\r\n\r\n    protected parser = new sax.SAXParser(true,\r\n    {\r\n        trim: true,\r\n        normalize: true\r\n    });\r\n    protected current_tag: any;\r\n    protected error: any;\r\n    protected article: any;\r\n\r\n    constructor(private callback: (articleBody: si.IBodyContainer) => void, protected uuid = '') {\r\n        this.parser.onopentag = (tag) => {\r\n            this.openTag(tag);\r\n        };\r\n        this.parser.onclosetag = (tag) => {\r\n            this.closeTag(tag);\r\n        };\r\n\r\n        this.parser.onerror = () => {\r\n            this.error = undefined;\r\n        };\r\n        this.parser.ontext = (text) => {\r\n            this.onText(text);\r\n        };\r\n        this.parser.oncdata = (text) => {\r\n            this.onText(text);\r\n        };\r\n        this.parser.onend = () => {\r\n            this.onEnd();\r\n        };\r\n    }\r\n\r\n    protected getArticle(url: string, callback: (document: string) => void, encoding = null): void {\r\n        request.get(url, {\r\n            encoding: null\r\n        },\r\n        (err: Error, resp: IncomingMessage, data: Buffer) => {\r\n            if (!err) {\r\n                let converted = data;\r\n                if (encoding) {\r\n                    const encoder = new iconv.Iconv(encoding, 'utf8');\r\n                    converted = encoder.convert(data);\r\n                }\r\n                callback(converted.toString());\r\n            } else {\r\n                callback(null);\r\n            }\r\n        });\r\n    }\r\n\r\n    protected getBinaryContent(url: string, callback: (data: Buffer) => void): void {\r\n        request.get(url,\r\n        {\r\n            encoding: null\r\n        },\r\n        (err: Error, resp: IncomingMessage, data: Buffer) => {\r\n            if (!err) {\r\n                callback(data);\r\n            } else {\r\n                callback(null);\r\n            }\r\n        });\r\n    }\r\n\r\n    protected scrubHtml(html: string): string {\r\n        return html.replace(/<script.*<\\/script>/gi, '');\r\n    }\r\n\r\n    protected childByName(parent, name) {\r\n        const children = parent.children || [];\r\n        for (let i = 0; i < children.length; i++) {\r\n            if (children[i].name === name) {\r\n                return children[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    protected childrenByName(parent, name) {\r\n        const children = parent.children || [];\r\n        const result = [];\r\n        for (let i = 0; i < children.length; i++) {\r\n            if (children[i].name === name) {\r\n                result.push(children[i]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    protected childData(parent: any, name: string, separator = ''): string {\r\n        const node = this.childByName(parent, name);\r\n        if (!node) {\r\n            return '';\r\n        }\r\n        const children = node.children;\r\n        if (!children.length) {\r\n            return '';\r\n        }\r\n        return children.join(separator);\r\n    }\r\n\r\n    parseArticle(article: si.IArticleContainer, encoding: any): void {                           \r\n            this.getArticle(article.header.link,\r\n                (document) => {\r\n                    this.parser.write(document);\r\n                },\r\n                encoding);        \r\n    }\r\n\r\n    write(xml: string) {\r\n        this.parser.write(xml).close();\r\n    };\r\n\r\n    protected openTag(tag) {\r\n        tag.parent = this.current_tag;\r\n        tag.children = [];\r\n        if (tag.parent) {\r\n            tag.parent.children.push(tag);\r\n        }\r\n        this.current_tag = tag;\r\n        this.onopentag(tag);\r\n    }\r\n\r\n    protected closeTag(tagname) {\r\n        this.onclosetag(tagname, this.current_tag);\r\n        if (this.current_tag && this.current_tag.parent) {\r\n            const p = this.current_tag.parent;\r\n            delete this.current_tag.parent;\r\n            this.current_tag = p;\r\n        }\r\n    }\r\n\r\n    protected onText(text) {\r\n        if (this.current_tag) {\r\n            this.current_tag.children.push(text);\r\n        }\r\n    }\r\n\r\n    protected onEnd() {\r\n\r\n    }\r\n\r\n    protected abstract onopentag(tag): void;\r\n\r\n    protected abstract onclosetag(tagname, currentTag): void;\r\n\r\n    protected getDescendantByAttributes(node: any, name: string, attribute: string, value: string): any {\r\n        if (node.name === name && node.attributes) {\r\n            let attr = node.attributes[attribute];\r\n            if (attr && attr.toString().includes(value)) {\r\n                return node;\r\n            }\r\n        }\r\n        if (node.children) {\r\n            for (let childNode of node.children) {\r\n                let result = this.getDescendantByAttributes(childNode, name, attribute, value);\r\n                if (result !== null) {\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}"],"sourceRoot":"/source/"}