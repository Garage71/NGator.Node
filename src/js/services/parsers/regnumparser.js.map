{"version":3,"sources":["services/parsers/regnumparser.ts"],"names":[],"mappings":";AAAA,iCAA6B,kBAAkB,CAAC,CAAA;AAEhD,iCAA6B,mBAAmB,CAAC,CAAA;AACjD,iCAA6B,mBAAmB,CAAC,CAAA;AAEjD,2BAAkC,+BAAc;IAK5C,YAAoB,EAA4C,EAAU,SAAS,GAAG,EAAE;QACpF,MAAM,EAAE,EAAE,SAAS,CAAC,CAAC;QADL,OAAE,GAAF,EAAE,CAA0C;QAAU,cAAS,GAAT,SAAS,CAAK;QAJhF,WAAM,GAAG,KAAK,CAAC;IAMvB,CAAC;IACS,SAAS,CAAC,GAAG;QACnB,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;YACrB,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;gBACjB,IAAI,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBACnC,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;oBAChD,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;gBACvB,CAAC;YACL,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;YAC5B,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;gBACjB,IAAI,QAAQ,GAAG,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;gBACvC,EAAE,CAAC,CAAC,QAAQ,KAAK,YAAY,CAAC,CAAC,CAAC;oBAC5B,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;gBAC5B,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IAES,UAAU,CAAC,OAAO,EAAE,UAAU;QACpC,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,IAAI,UAAU,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACnD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACpB,IAAI,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;gBACxD,IAAI,WAAW,GAAG,EAAE,CAAC;gBACrB,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC;oBACvB,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC3B,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;4BAC5B,WAAW,GAAG,WAAW,GAAG,GAAG,GAAG,KAAK,CAAC;wBAC5C,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gCAC5B,IAAI,eAAe,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gCACxC,EAAE,CAAC,CAAC,OAAO,eAAe,KAAK,QAAQ,CAAC,CAAC,CAAC;oCACtC,WAAW,GAAG,WAAW,GAAG,GAAG,GAAG,eAAe,CAAC;gCACtD,CAAC;4BACL,CAAC;wBACL,CAAC;oBACL,CAAC;gBACL,CAAC;gBACD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YACnC,CAAC;YACD,IAAI,QAAQ,GAAG,IAAI,CAAC,yBAAyB,CAAC,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;YACxF,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC5D,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,IAAI,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC7D,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACnB,+BAAc,CAAC,aAAa,CAAC,GAAG,EAC5B,CAAC,IAAY;wBACT,+BAAc,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;wBAC9C,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;4BACd,IAAI,CAAC,EAAE,CAAC;gCACJ,IAAI,EAAE,IAAI,CAAC,WAAW;gCACtB,UAAU,EAAE,IAAI;6BACnB,CAAC,CAAC;4BACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;wBACvB,CAAC;oBACL,CAAC,CAAC,CAAC;gBACX,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;oBACd,IAAI,CAAC,EAAE,CAAC;wBACJ,IAAI,EAAE,IAAI,CAAC,WAAW;wBACtB,UAAU,EAAE,KAAK;qBACpB,CAAC,CAAC;oBACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACvB,CAAC;YACL,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,IAAI,UAAU,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACxD,CAAC;IACL,CAAC;AAEL,CAAC;AA7EY,oBAAY,eA6ExB,CAAA","file":"services/parsers/regnumparser.js","sourcesContent":["import {AbstractParser} from './abstractparser';\r\nimport * as si from '../../shared/interfaces';\r\nimport {BinaryProvider} from '../binaryprovider';\r\nimport {ContentStorage} from '../contentstorage';\r\n\r\nexport class RegnumParser extends AbstractParser {\r\n    private cbSent = false;\r\n    private illustration: any;\r\n    private illustrationUrl: string;\r\n    private articleText: string;\r\n    constructor(private cb: (articleBody: si.IBodyContainer) => void, private articleId = '') {\r\n        super(cb, articleId);\r\n    }\r\n    protected onopentag(tag) {\r\n        if (tag.name === 'div') {\r\n            if (tag.attributes) {\r\n                let attr = tag.attributes['class'];\r\n                if (attr && attr.toString().includes('news_body')) {\r\n                    this.article = tag;\r\n                }\r\n            }\r\n        } else if (tag.name === 'img') {\r\n            if (tag.attributes) {\r\n                let imgClass = tag.attributes['class'];\r\n                if (imgClass === 'detail_img') {\r\n                    this.illustration = tag;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onclosetag(tagname, currentTag) {\r\n        if (tagname === 'div' && currentTag === this.article) {\r\n            if (!this.articleText) {\r\n                let paragraphs = this.childrenByName(this.article, 'p');\r\n                let articleText = '';\r\n                for (let p of paragraphs) {\r\n                    for (let child of p.children) {\r\n                        if (typeof child === 'string') {\r\n                            articleText = articleText + ' ' + child;\r\n                        } else {\r\n                            if (child.children.length > 0) {\r\n                                let firstInnerChild = child.children[0];\r\n                                if (typeof firstInnerChild === 'string') {\r\n                                    articleText = articleText + ' ' + firstInnerChild;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                this.articleText = articleText;\r\n            }\r\n            let pictNode = this.getDescendantByAttributes(currentTag, 'img', 'class', 'main_image');                \r\n            if (this.illustrationUrl || (pictNode && pictNode.attributes)) {\r\n                let url = this.illustrationUrl || pictNode.attributes['src'];\r\n                if (url && this.uuid) {\r\n                    BinaryProvider.GETBINARYDATA(url,\r\n                        (data: Buffer) => {\r\n                            ContentStorage.saveEnclosure(this.uuid, data);\r\n                            if(!this.cbSent) {\r\n                                this.cb({\r\n                                    body: this.articleText,\r\n                                    hasPicture: true\r\n                                });\r\n                                this.cbSent = true;\r\n                            }\r\n                        });\r\n                }\r\n            } else {\r\n                if(!this.cbSent) {\r\n                    this.cb({\r\n                        body: this.articleText,\r\n                        hasPicture: false\r\n                    });\r\n                    this.cbSent = true;\r\n                }\r\n            }\r\n        } else if (tagname === 'img' && currentTag === this.illustration) {\r\n            this.illustrationUrl = currentTag.attributes['src'];\r\n        }\r\n    } \r\n        \r\n}"],"sourceRoot":"/source/"}