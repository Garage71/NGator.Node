{"version":3,"sources":["services/contentstorage.ts"],"names":[],"mappings":"AAAA;;;EAGE;;AAIF;IAKI,WAAW,CAAC,OAA6B;QACrC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;QACtD,cAAc,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC;QAChE,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,gBAAgB,CAAC,IAAY;QACzB,EAAE,CAAC,CAAC,cAAc,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC/C,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,mBAAmB,CAAC,MAAqB;QACrC,IAAI,QAAQ,GAA2B,EAAE,CAAC;QAC1C,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,OAAO;YAC1C,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBACxC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC3B,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAED,eAAe,CAAC,GAAW;QACvB,IAAI,IAAI,GAAG,cAAc,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACP,MAAM,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC/C,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;AACL,CAAC;AAjCkB,6BAAc,GAAG,IAAI,GAAG,EAAgC,CAAC;AACzD,2BAAY,GAAG,IAAI,GAAG,EAAkB,CAAC;AAH/C,sBAAc,iBAmC1B,CAAA;AAED;kBAAe,cAAc,CAAC","file":"services/contentstorage.js","sourcesContent":["/**\r\n * News content storage service\r\n * \r\n*/\r\n\r\nimport * as si from '../shared/interfaces';\r\n\r\nexport class ContentStorage {\r\n\r\n    private static articleStorage = new Map<string, si.IArticleContainer>();\r\n    private static urlToUuidMap = new Map<string, string>();\r\n\r\n    saveArticle(article: si.IArticleContainer): boolean {\r\n        ContentStorage.articleStorage[article.uuid] = article;\r\n        ContentStorage.urlToUuidMap[article.header.link] = article.uuid;\r\n        return true;\r\n    }\r\n\r\n    getArticleByGuid(uuid: string): si.IArticleContainer {\r\n        if (ContentStorage.articleStorage.has(uuid)) {\r\n            return ContentStorage.articleStorage[uuid];\r\n        }\r\n        return null;\r\n    }\r\n        \r\n    getArticlesBySource(source: si.IRSSSource): si.IArticleContainer[] {\r\n        let articles: si.IArticleContainer[] = [];\r\n        ContentStorage.articleStorage.forEach((article) => {\r\n            if (article.header.source === source.name) {\r\n                articles.push(article);\r\n            }\r\n        });\r\n        return articles;\r\n    }\r\n            \r\n    getArticleByUrl(url: string): si.IArticleContainer {\r\n        let uuid = ContentStorage.urlToUuidMap[url];\r\n        if (uuid) {\r\n            return ContentStorage.articleStorage[uuid];\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default ContentStorage;"],"sourceRoot":"/source/"}