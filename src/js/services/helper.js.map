{"version":3,"sources":["services/helper.ts"],"names":[],"mappings":"AAAA;;GAEG;;AAEH;IAMI,OAAO,SAAS,CAAC,IAAY;QACzB,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QACxD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IAC1D,CAAC;IAED,OAAO,wBAAwB,CAAC,IAAY;QACxC,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IACzD,CAAC;AACL,CAAC;AAdkB,gBAAS,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;AAC9B,iBAAU,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;AAC9B,eAAQ,GAAG,0BAA0B,CAAC,OAAO,EAAE,CAAC;AAChD,kBAAW,GAAG,qDAAqD,CAAC,OAAO,EAAE,CAAC;AAJpF,cAAM,SAelB,CAAA","file":"services/helper.js","sourcesContent":["/**\r\n * Regular expressions helper class\r\n */\r\n\r\nexport class Helper {\r\n    private static htmlRegex = /<.*?>/.compile();\r\n    private static quoteRegex = /&.*?/.compile();\r\n    private static divRegex = /<div\\b[^>]*>(.*?)<\\/div>/.compile();\r\n    private static scriptRegex = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi.compile();\r\n\r\n    static STRIPTAGS(text: string): string {\r\n        let stripped = this.htmlRegex[Symbol.replace](text, '');\r\n        return this.quoteRegex[Symbol.replace](stripped, ' ');\r\n    }\r\n\r\n    static REMOVEDIVANDSCRPITBLOCKS(text: string): string {\r\n        let undived = this.divRegex[Symbol.replace](text, '');\r\n        return this.scriptRegex[Symbol.replace](undived, '');\r\n    }\r\n}"],"sourceRoot":"/source/"}