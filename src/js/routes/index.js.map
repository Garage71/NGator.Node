{"version":3,"sources":["routes/index.ts"],"names":[],"mappings":"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","file":"routes/index.js","sourcesContent":["/**\r\n * Main application router\r\n */\r\n\r\n'use strict';\r\nimport * as rssService from '../services/rsssources';\r\nimport * as si from '../shared/interfaces';\r\nimport * as express from 'express';\r\nimport * as newsProvider from '../services/newsprovider';\r\nimport {ContentStorage} from '../services/contentstorage';\r\nimport {AbstractParser} from '../services/parsers/abstractparser';\r\nimport {LentaParser} from '../services/parsers/lentaparser';\r\nimport {NewsMailRuParser} from '../services/parsers/newsmailruparser';\r\nimport {VzRuParser} from '../services/parsers/vzruparser';\r\nimport {RegnumParser} from '../services/parsers/regnumparser';\r\nimport {NewsRamblerRuParser} from '../services/parsers/newsramblerparser';\r\nimport {BinaryProvider} from '../services/binaryprovider';\r\n\r\n/// todo: implement Dependency Injection\r\nlet router = express.Router();\r\nlet rss = new rssService.RssSources();\r\nlet news = new newsProvider.NewsProvider();\r\nlet cs = ContentStorage;\r\n\r\n/* GET home page. */\r\n\r\nrouter.get('/api/sources/logo/:id',\r\n    (req, res, next) => {\r\n        let logoID = req.params.id;\r\n         cs.getLogo(logoID, (logo) => {\r\n            res.status(200).send(logo);\r\n        });\r\n    });\r\n\r\nrouter.get('/api/sources/article/:id',\r\n    (req, res, next) => {\r\n        let articleID = req.params.id;\r\n        let article = cs.getArticleByUuid(articleID);\r\n        let callback = (art: si.IBodyContainer): void => {\r\n            article.body = art;\r\n            cs.saveArticle(article);\r\n            res.status(200).json(art);\r\n        };\r\n        if (!article.body.body) {\r\n            let parser: AbstractParser = null;\r\n            let encoding = null;\r\n            switch (article.rssSource.name) {\r\n            case 'Lenta.ru':\r\n                parser = new LentaParser(callback);\r\n                break;\r\n            case 'News.mail.ru':\r\n                parser = new NewsMailRuParser(callback, article.uuid);\r\n                break;\r\n            case 'VZ.ru':\r\n                encoding = 'cp1251';\r\n                parser = new VzRuParser(callback, article.uuid);\r\n                break;\r\n            case 'Regnum':\r\n                parser = new RegnumParser(callback, article.uuid);\r\n                break;\r\n            case 'News.rambler.ru':\r\n                parser = new NewsRamblerRuParser(callback, article.uuid);\r\n                break;\r\n            default:\r\n                res.status(404);\r\n            }\r\n            if (parser) {\r\n                parser.parseArticle(article, encoding);\r\n            }\r\n        } else {\r\n            res.status(200).json(article.body);\r\n        }\r\n    });\r\n\r\nrouter.get('/api/sources/picture/:id',\r\n    (req, res, next) => {\r\n\r\n        let articleID = req.params.id;\r\n        let article = cs.getArticleByUuid(articleID);\r\n        if (!article.body.hasPicture && !article.header.hasEnclosure) {\r\n            res.status(404);\r\n            return;\r\n        }\r\n        let picUrl = article.header.enclosure;\r\n\r\n        if (picUrl) {\r\n            BinaryProvider.GETBINARYDATA(picUrl,\r\n            (picture) => {\r\n                cs.saveEnclosure(articleID, picture);\r\n            });\r\n        }\r\n\r\n        cs.getEnclosureByUuid(articleID, (picture) => {\r\n            res.status(200).send(picture);\r\n        });\r\n    });\r\n\r\nrouter.get('/',\r\n(req, res, next) => {\r\n    res.render('../views/index', { title: 'Express' });\r\n    });\r\n\r\nrouter.get('/api/sources',\r\n    (req, res, next) => {\r\n        res.status(200).json(rss.getRssSources());\r\n    });\r\n\r\nrouter.post('/api/sources', (req, res, next) => {\r\n    news.getNews(req.body.rssSources, req.body.currentPage, req.body.refresh, (newsFeed: si.INewsHeader[], totalCount: number) => {\r\n        let result: si.INewsHeaders = {\r\n            newsHeaders: newsFeed,\r\n            totalArticlesCount: totalCount\r\n        };\r\n        res.status(200).json(result);\r\n    });\r\n});\r\n\r\nexport default router;"],"sourceRoot":"/source/"}